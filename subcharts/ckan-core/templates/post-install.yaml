apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}-post-install"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{.Release.Name}}-post-install"
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
      - name: post-install-job
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        command: ["/bin/bash", "/initialize.sh"]
        env:
        - name: CKAN_MAX_UPLOAD_SIZE_MD
          value: {{ .Values.maxUploadSize | quote }}
        - name: CKAN_SOLR_URL
          value: {{ template "ckanSolrUrl" . }}
        - name: CKAN_REDIS_URL
          value: {{ template "ckanRedisUrl" . }}
        - name: CKAN_DATAPUSHER_URL
          value: {{ template "ckanDatapusherUrl" . }}
        - name: CKAN_SITE_URL
          value: {{ .Values.siteUrl | quote }}
        - name: PGHOST
          value: {{ .Release.Name }}-postgresql
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: postgres-password
        - name: CKAN_SQLALCHEMY_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: sqlalchemy-url
        - name: CKAN_DATASTORE_WRITE_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: datastore-write-url
        - name: CKAN_DATASTORE_READ_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: datastore-read-url
        volumeMounts:
        - mountPath: /etc/ckan/production.ini
          name: ckan-production-ini
          subPath: production.ini
        - mountPath: /initialize.sh
          name: initialize-sh
          subPath: initialize.sh
      volumes:
      - name: ckan-production-ini
        configMap:
          name: {{ template "fullname" . }}
          items:
          - key: ckanProductionIni
            path: production.ini
      - name: initialize-sh
        configMap:
          name: {{ template "fullname" . }}-initialize
          items:
          - key: initializeSh
            path: initialize.sh
